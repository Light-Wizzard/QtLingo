#
version: '{branch}-{build}'

branches:
  only:
    - master

build: off

configuration: Release

platform:
  - x64
  #- x86

image:
  - Visual Studio 2019
  - Ubuntu

for:
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    RUNTIME_LINKAGE: static
    COVERITY_BUILD_CANDIDATE: True
    MY_BIN_PRO_RES_NAME: QtLingo
    MY_OS: Windows # No Spaces
    MY_COMPILER: "Qt"
    MY_QT_VERSION: 5.15.2
    MY_VS_VERSION: 2019
    MY_QT_MINGW32: mingw81_32
    MY_QT_MINGW64: mingw81_64
    MY_QT_TOOLS_MINGW32: mingw810_32
    MY_QT_TOOLS_MINGW64: mingw810_32 # mingw810_64?
    MY_QT_IF_VERSION: '4.1.1'
    MY_QIF_PACKAGE_URI: 'packages\com.appveyor.qtlingo\data'
    MY_PYTHON_VER: 3.8 # Last version Windows 7 can run
    MY_PYTHON_REQUIRED: false
    MY_RUN_DOXYFILE: false
  install:
    # Create our AppVeyor version
    - ps: $env:REPO_NAME =  $env:APPVEYOR_REPO_NAME.Substring($env:APPVEYOR_REPO_NAME.IndexOf('/') + 1)
    - ps: $env:package_version = ("$(git describe --tags --always --long)").trim()
    - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
    - ps: $env:MY_COMPILER="Qt"
    - ps: Invoke-Expression -Command scripts\install.ps1
  build_script:
    - ps: Write-Host "build_script yaml"
    - ps: Invoke-Expression -Command scripts\build_script.ps1
  artifacts:
    - path: '*.zip'
      name: 'ZipInstaller'

-
  matrix:
    only:
      - image: Ubuntu
  environment:
    RUNTIME_LINKAGE: static
    COVERITY_BUILD_CANDIDATE: True
    MY_BIN_PRO_RES_NAME: QtLingo
    MY_OS: Ubuntu
    MY_COMPILER: "Qt"
    MY_QT_VERSION: 5.15.2
    MY_VS_VERSION: 2019
    MY_QT_IF_VERSION: '4.1.1'
    MY_QIF_PACKAGE_URI: 'packages/com.appveyor.qtlingo/data'
    MY_PYTHON_VER: 3.9
    MY_PYTHON_REQUIRED: false
    MY_UPGRADE_OS: false # apt-get upgrade: true or false only
    MY_RUN_DOXYFILE: false
  install:
    # Create our AppVeyor version
    - ps: $env:REPO_NAME =  $env:APPVEYOR_REPO_NAME.Substring($env:APPVEYOR_REPO_NAME.IndexOf('/') + 1)
    - ps: $env:package_version = ("$(git describe --tags --always --long)").trim()
    - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
    - sh: bash -c "scripts/install.sh"
  build_script:
    - sh: bash -c "scripts/build_script.sh"
  artifacts:
    - path: '*.zip'
      name: 'ZipInstaller'

deploy:
  - provider: GitHub
    release: continuous
    artifact: 'ZipInstaller'
    draft: false
    prerelease: true
    auth_token:
      secure: 5Kb03ANp7s6KeJKren+ROsEnuCk2tXGby36aqYpG0WV8xfHBg26Td9B4C9jpI/O/
############################################## End of File ####################
